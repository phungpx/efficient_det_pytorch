data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.labelme_dataset
        class: LabelmeDataset
        LabelmeDataset:
          model_name: '''D0'''
          dirnames:
            - '''dataset/CORNER/valid/'''
          image_patterns: ['''*.*g''', '''*.*G''']
          label_patterns: ['''*.json''']
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          classes:
            BLX: 0
            BLX_BACK: 1
            BLX_OLD: 2
            BLX_BACK_OLD: 3
            CMND: 4
            CMND_BACK: 5
            CCCD: 6
            CCCD_BACK: 7
            CMCC: 8
            CCCD_front_chip: 9
            CCCD_back_chip: 10
            CMQD_A: 11
            CMQD_A_BACK: 12
            CMQD_B: 13
            CMQD_B_BACK: 14
            CMQD_C: 15
            CMQD_C_BACK: 16
            CMQD_D: 17
            CMQD_D_BACK: 18
            CMQD_B_VT: 19
            CMQD_B_VT_BACK: 20
            PASSPORT: 21
            PASSPORT_OTHER: 22
            top_left: 23
            top_right: 24
            bottom_left: 25
            bottom_right: 26
      batch_size: 16
      shuffle: False
      num_workers: 12
      pin_memory: True
      drop_last: False
      collate_fn: 'lambda batch:tuple(zip(*batch))'

model:
  module: flame.core.model.efficient_det
  class: Model
  Model:
    num_classes: 27
    model_name: '''D0'''
    backbone_pretrained: False
    scales: ['2 ** (-2 / 3)', '2 ** (-1 / 3)', '2 ** 0', '2 ** (1 / 3)', '2 ** (2 / 3)']
    aspect_ratios: [0.5, 1., 2.]  # anchor_width / anchor_height
    iou_threshold: 0.2
    score_threshold: 0.3

metrics:
  module: flame.handlers.metric_evaluator
  class: Metrics
  Metrics:
    metrics:
      coco_eval:
        module: flame.core.metric.COCO_eval
        class: COCOEvaluator
        COCOEvaluator:
          model_name: '''D0'''
          detection_path: '''checkpoint/CORNER/efficientdet-d0/2208091657/det_val.json'''
          ground_truth_path: '''checkpoint/CORNER/efficientdet-d0/2208091657/gt_val.json'''
          classes: 27
          output_transform: 'lambda x: (x[0], x[1], x[2])'
    attach_to:
      engine: '''test'''

logger:
  module: flame.handlers.logger
  class: Logger
  Logger:
    logdir: '''checkpoint/CORNER/efficientdet-d0/2208091657/'''
    logname: '''CORNER'''
    run_mode: '''testing'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''test'''

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: '''checkpoint/CORNER/efficientdet-d0/2208091657/best_model_119_focal_loss=-0.5992.pt'''
    mode: '''test'''

predictor:
  module: flame.handlers.region_predictor
  class: RegionPredictor
  RegionPredictor:
    evaluator_name: '''engine'''
    output_dir: '''checkpoint/CORNER/efficientdet-d0/2208091657/best_model_119_focal_loss=-0.5992/'''
    model_name: '''D0'''
    classes:
      BLX: [[0, 0, 255], 0]
      BLX_BACK: [[0, 0, 255], 1]
      BLX_OLD: [[0, 0, 255], 2]
      BLX_BACK_OLD: [[0, 0, 255], 3]
      CMND: [[0, 0, 255], 4]
      CMND_BACK: [[0, 0, 255], 5]
      CCCD: [[0, 0, 255], 6]
      CCCD_BACK: [[0, 0, 255], 7]
      CMCC: [[0, 0, 255], 8]
      CCCD_front_chip: [[0, 0, 255], 9]
      CCCD_back_chip: [[0, 0, 255], 10]
      CMQD_A: [[0, 0, 255], 11]
      CMQD_A_BACK: [[0, 0, 255], 12]
      CMQD_B: [[0, 0, 255], 13]
      CMQD_B_BACK: [[0, 0, 255], 14]
      CMQD_C: [[0, 0, 255], 15]
      CMQD_C_BACK: [[0, 0, 255], 16]
      CMQD_D: [[0, 0, 255], 17]
      CMQD_D_BACK: [[0, 0, 255], 18]
      CMQD_B_VT: [[0, 0, 255], 19]
      CMQD_B_VT_BACK: [[0, 0, 255], 20]
      PASSPORT: [[0, 0, 255], 21]
      PASSPORT_OTHER: [[0, 0, 255], 22]
      top_left: [[255, 0, 255], 23]
      top_right: [[0, 255, 255], 24]
      bottom_left: [[255, 0, 0], 25]
      bottom_right: [[0, 255, 0], 26]
    output_transform: 'lambda x: (x[0], x[-1])'

engine:
  module: flame.core.engine.evaluator
  class: Evaluator
  Evaluator:
    dataset: config['data']['test']
    device: '''cuda'''

extralibs:
  torch: torch
