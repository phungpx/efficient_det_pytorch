data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.pascal_dataset
        class: PascalDataset
        PascalDataset:
          compound_coef: 0
          VOC2012:
            image_dir: '''dataset/PASCALVOC2012/JPEGImages/'''
            label_dir: '''dataset/PASCALVOC2012/Annotations/'''
            txt_path: '''dataset/PASCALVOC2012/ImageSets/Segmentation/val.txt'''
          VOC2007:
            image_dir: '''dataset/PASCALVOC2007/VOCtest_06-Nov-2007/VOCdevkit/VOC2007/JPEGImages/'''
            label_dir: '''dataset/PASCALVOC2007/VOCtest_06-Nov-2007/VOCdevkit/VOC2007/Annotations/'''
          image_extent: '''.jpg'''
          label_extent: '''.xml'''
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          classes:
            aeroplane: 0
            bicycle: 1
            bird: 2
            boat: 3
            bottle: 4
            bus: 5
            car: 6
            cat: 7
            chair: 8
            cow: 9
            diningtable: 10
            dog: 11
            horse: 12
            motorbike: 13
            person: 14
            pottedplant: 15
            sheep: 16
            sofa: 17
            train: 18
            tvmonitor: 19
      batch_size: 32
      shuffle: False
      pin_memory: True
      num_workers: 12
      drop_last: False
      collate_fn: 'lambda batch:tuple(zip(*batch))'

model:
  module: flame.core.model.efficient_det.efficientdet
  class: EfficientDet
  EfficientDet:
    num_classes: 20
    compound_coef: 0
    scales: ['2 ** 0', '2 ** (1.0 / 3.0)', '2 ** (2.0 / 3.0)']
    aspect_ratios: ['(1.0, 1.0)', '(1.4, 0.7)', '(0.7, 1.4)']
    iou_threshold: 0.2
    score_threshold: 0.3

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      mAP:
        module: flame.handlers.metrics.mean_average_precision.evaluator
        class: Evaluator
        Evaluator:
          eval_fn:
            module: flame.handlers.metrics.mean_average_precision.mean_average_precision
            class: MeanAveragePrecision
            MeanAveragePrecision:
              classes:
                aeroplane: 0
                bicycle: 1
                bird: 2
                boat: 3
                bottle: 4
                bus: 5
                car: 6
                cat: 7
                chair: 8
                cow: 9
                diningtable: 10
                dog: 11
                horse: 12
                motorbike: 13
                person: 14
                pottedplant: 15
                sheep: 16
                sofa: 17
                train: 18
                tvmonitor: 19
              iou_threshold: 0.5
              method: '''every_point_interpolation'''
          output_transform: 'lambda x: (x[0], x[1])'
    attach_to:
      engine: '''test'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''test'''

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: '''checkpoint/PASCAL/efficientdet-d0/2110221358/best_model_21_focal_loss=-1.2464.pt'''
    mode: '''test'''

predictor:
  module: flame.handlers.region_predictor
  class: RegionPredictor
  RegionPredictor:
    evaluator_name: '''engine'''
    output_dir: '''checkpoint/PASCAL/efficientdet-d0/2110221358/best_model_21_focal_loss=-1.2464/'''
    compound_coef: 0
    classes:
      aeroplane: [[128, 0, 0], 0]  # color, class_idx, area_threshold
      bicycle: [[0, 128, 0], 1]
      bird: [[128, 128, 0], 2]
      boat: [[0, 0, 128], 3]
      bottle: [[128, 0, 128], 4]
      bus: [[0, 128, 128], 5]
      car: [[128, 128, 128], 6]
      cat: [[64, 0, 0], 7]
      chair: [[192, 0, 0], 8]
      cow: [[64, 128, 0], 9]
      diningtable: [[192, 128, 0], 10]
      dog: [[64, 0, 128], 11]
      horse: [[192, 0, 128], 12]
      motorbike: [[64, 128, 128], 13]
      person: [[192, 128, 128], 14]
      pottedplant: [[0, 64, 0], 15]
      sheep: [[128, 64, 0], 16]
      sofa: [[0, 192, 0], 17]
      train: [[128, 192, 0], 18]
      tvmonitor: [[0, 64, 128], 19]
    output_transform: 'lambda x: (x[0], x[-1])'

engine:
  module: flame.core.engine.tester
  class: Evaluator
  Evaluator:
    dataset: config['data']['test']
    device: '''cuda'''

extralibs:
  torch: torch
